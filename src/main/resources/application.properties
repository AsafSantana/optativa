spring.tymeleaf.cache=false
## Configurações banner
application.version=0.0.1-SNAPSHOT
## -------------------------------------------------------------------------------
## GERAIS
## -------------------------------------------------------------------------------
## Profile default
spring.profiles.default=prod
## Portas
server.port=8081
server.error.path=/error
# Duração da sessão definida em segundos
#server.session.timeout=1800
#server.tomcat.max-http-header-size=64000
## Formatador de datas do jackson
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.jackson.serialization.write_dates_as_timestamps=false
spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss.SSSZ
#spring.jackson.default-property-inclusion=non_null
spring.jackson.default-property-inclusion=non_empty
## -------------------------------------------------------------------------------
## LOGGING
## -------------------------------------------------------------------------------
logging.path=../
logging.level.root=INFO
logging.level.org.hibernate=INFO
logging.level.org.springframework.web=INFO
## -------------------------------------------------------------------------------
## SEGURANÇA
## -------------------------------------------------------------------------------
## Tipo de seguranca: aceita as seguintes opções: in-memory, database, ldap ou compras
##app.security.connection.type=database
## -------------------------------------------------------------------------------
## BANCO DE DADOS
## -------------------------------------------------------------------------------
## Pool connection
#spring.datasource.max-wait=60000
#spring.datasource.max-active=30
#spring.datasource.initial-size=5
#spring.datasource.max-idle=10
#spring.datasource.min-idle=5
## Evitar Broken pipe
#spring.datasource.testOnBorrow=true
#spring.datasource.validationQuery=SELECT 1
## -----------------------------------------------------------------------------------
## POSTGRES
## -----------------------------------------------------------------------------------
spring.datasource.url=jdbc:${JDBC_DATABASE_URL:}
spring.datasource.username=postgres
spring.datasource.password=postgres
##O que o Hibernate ira fazer quando a estrutura for diferente:
##update: altera a estrutura do banco
##create-drop: dropar e depois criar novamente (perdendo valores)
##validate: valida o DB, não faz alterações no banco de dados
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
## Força o hibernate a usar determinado driver(seguranca).
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
## -----------------------------------------------------------------------------------
## LiquiBase
## -----------------------------------------------------------------------------------
#spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:db/master-init.xml
spring.liquibase.parameters.datasource.platform=postgres

